name: Create Roadmap Issues

on:
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  create-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Issues from JSON
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          python3 - <<'PY'
import os, json, sys, urllib.request, urllib.error

repo = f"{os.environ['OWNER']}/{os.environ['REPO']}"
token = os.environ['GITHUB_TOKEN']

with open('issues/issues.json', 'r', encoding='utf-8') as f:
    issues = json.load(f)

api_base = "https://api.github.com/repos"
created = 0

for issue in issues:
    data = json.dumps({
        "title": issue.get("title"),
        "body": issue.get("body")
    }).encode('utf-8')

    req = urllib.request.Request(
        f"{api_base}/{repo}/issues",
        data=data,
        method='POST'
    )
    req.add_header("Authorization", f"Bearer {token}")
    req.add_header("Accept", "application/vnd.github+json")
    req.add_header("Content-Type", "application/json")

    try:
        urllib.request.urlopen(req)
        created += 1
        print(f"✅ Created: {issue.get('title')}")
    except urllib.error.HTTPError as e:
        print(f"❌ Failed to create: {issue.get('title')} - Status: {e.code}", file=sys.stderr)

print(f"Total issues created: {created}")
PY
